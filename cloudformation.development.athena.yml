AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CFNDatabaseName:
    Description: Name of container for Athena tables
    Type: String
    # Athena only supports alphanumeric and underscore characters.
    AllowedPattern: "^[a-zA-Z0-9]+[a-zA-Z0-9_]+[a-zA-Z0-9]+$"
    Default: dev_flaskapi_01
  CFNTableName01:
    Description: Name of dev table permits
    Type: String
    AllowedPattern: "^[a-zA-Z0-9]+[a-zA-Z0-9_]+[a-zA-Z0-9]+$"
    Default: dev_permits_01
  CFNDataStoreName:
    Description: Name of Data Store as source for Athena
    Type: String
    AllowedPattern: "^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$"
    Default: flaskapi-dev-datastore-eu-central-1

# Resources section defines metadata for the Data Catalog
Resources:
  CFNDataStore:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault: 
            SSEAlgorithm: AES256
      BucketName: !Ref CFNDataStoreName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      # advanced list features
      # InventoryConfigurations: 
      #  - InventoryConfiguration
      # LifecycleConfiguration: 
      #   LifecycleConfiguration
   
  # Create an AWS Glue database and table definition
  CFNDatabaseFlaskapi:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId   
      DatabaseInput:
        # The name of the database is defined in the Parameters section above
        Name: !Ref CFNDatabaseName	
        Description: Database to hold tables for permits data
        # LocationUri seems to be optional - locations are defined in tables
        # Parameters: Leave AWS database parameters blank

  CFNTablePermits:
    DependsOn: CFNDatabaseFlaskapi
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CFNDatabaseName
      TableInput:
        Name: !Ref CFNTableName01
        Description: Dataset containing applications for SF Housing Permits
        # DateAdded: !Ref CreationDate
        TableType: EXTERNAL_TABLE
        # TODO: Add compression
        Parameters: {
        "classification": "parquet"
        }
        PartitionKeys:
        # Data is partitioned by day of upload, NOTE: ^_ will be ignored
        # TODO: try partitiontime_
        # s3://flaskapi-dev-datastore-eu-central-1/permits/parquet/partitiontime=2019-09-06
        - Name: partitiontime
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Columns:
          - Name: application_number
            Type: string
          - Name: permit_record_id
            Type: smallint
          - Name: estate_address
            Type: string
          - Name: permit_description
            Type: string
          - Name: permit_est_cost
            Type: float
          - Name: permit_expiration_date
            Type: date
          - Name: permit_file_date
            Type: date
          - Name: revised_cost
            Type: float
          - Name: application_status
            Type: string
          - Name: status_date
            Type: string
          - Name: estate_existing_use
            Type: string
          - Name: estate_proposed_use
            Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: s3://flaskapi-dev-datastore-eu-central-1/permits/parquet/
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe

  # Partition 1
  # Create an AWS Glue partition  
  CFNPartitionDate20190906:
    DependsOn: CFNTablePermits
    Type: AWS::Glue::Partition
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CFNDatabaseName
      TableName: !Ref CFNTableName01
      PartitionInput:
        Values:
        - "2019-09-06"
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Columns:
          - Name: mon
            Type: bigint
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: s3://flaskapi-dev-datastore-eu-central-1/permits/parquet/partitiontime=2019-09-06/
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe

          

