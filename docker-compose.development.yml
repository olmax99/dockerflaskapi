version: '3'
services:
  web.flaskapi:
    build: webflaskapi
    env_file:
      - .env.web.dev
    volumes:
      - './webflaskapi:/app'
      # shared volume with celery worker
      - s3fs:/app/data
      # uncomment for ignoring s3fs plugin
      # - $PWD/webflaskapi/data:/app/data
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=flaskapi/api.py
      - FLASK_DEBUG=1
      - RUN_MODE=DEVELOPMENT
      - C_FORCE_ROOT=true
      - 'RUN=pipenv run flask run --host=0.0.0.0 --port=5000'
    # Infinite loop, to keep it alive, recommended for debugging
    # Comment out for running directly on uswgi/nginx
    # command: bash -c "while true; do echo 'sleeping...' && sleep 10; done"
    depends_on:
      - redis.flaskapi
    networks:
      - default
  worker.flaskapi:
    build: celery_queue
    env_file:
      - .env.worker.dev
    volumes:
      # shared volume with flask web api
      - s3fs:/queue/data
      # uncomment for ignoring s3fs plugin  
      # - $PWD/webflaskapi/data:/queue/data
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - redis.flaskapi
    networks:
      - default
  flower.flaskapi:
    image: mher/flower
    ports:
      - "5555:5555"
    entrypoint: flower
    command: ["--port=5555", "--broker=${REDIS_URI}"]
    depends_on:
      - redis.flaskapi
  redis.flaskapi:
    image: redis:5.0-alpine
    environment:
      REDIS_PASSWD: "${REDIS_PASSWD}"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass "${REDIS_PASSWD}"
    ports:
      - '6379:6379'
    networks:
      - default
volumes:
    redis_data:
      external:
        name: flaskapi-dev-redis-broker-data
    s3fs:
      external:
        name: flaskapi-dev-rexray-data

